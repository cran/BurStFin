Changes in version 1.02 (2014-03-09)

NEW FEATURES

    o The 'slideWeight' function is added.  This creates a vector 
      suitable to use as time weights -- for example, the 'weights'
      argument to 'var.shrink.eqcor' or 'factor.model.stat'.

NON-BACKWARD COMPATIBLE

    o if in 'factor.model.stat' the 'constant.returns.okay' 
      argument is 'TRUE', then any columns with constant values
      now get a variance of zero rather than the default variance 
      for an all missing column.  The previous behavior could 
      arguably be considered a bug.

CHANGES

    o the default value of 'tol' in 'var.shrink.eqcor' is now
      1e-4 instead of 1e-3.  This is still a guess, but it seems 
      to be a better guess.

    o equal time weights can be specified with 'weight=NULL'
      in 'factor.model.stat' and 'var.shrink.eqcor'.

    o 'cumulative.variance.fraction' is a new component of the result of
      'factor.model.stat' when its output is the factor model.

    o 'constant.names' is a new component of the result of
      'factor.model.stat' when its output is the factor model.

BUG FIXES

    o The 'x' in 'factor.model.stat' is immediately coerced with
      'as.matrix' to avoid subsetting problems with some data types,
      'timeSeries' for instance.

    o A second attempt is made with 'svd' inside 'factor.model.stat'
      if the first attempt fails to converge. 
      It also does a sanity check on the result of 'svd'.



Changes in version 1.01 (2012-02-12):

NEW FEATURES

    o The 'threeDarr' function is added.  This creates three-dimensional
      arrays out of matrices.

CHANGES

    o 'var.shrink.eqcor' and 'factor.model.stat' have a new argument
      'verbose' that controls whether some warnings are given.  Both
      functions can warn if there are no negative values in the input
      'x' -- an indication in finance that prices rather than returns
      are given.  Warnings in 'factor.model.stat' about constant
      columns in 'x' and negative specific variances are also controlled.

    o 'var.add.benchmark' has a new argument 'sum.to.one' that allows
      a "benchmark" to have weights that sum to something other than
      one.  An example is to give portfolio weights minus benchmark
      weights.

BUG FIXES

    o (none)

